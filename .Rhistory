d$hours <- d$Duration / 60
# Gather tasks into categories
unique(d$`Assigned task`)
d$category <- ifelse(d$`Assigned task` %in% c("YABP", "Experiment In Art", "Summoner Of Games", "Data Science Explorer", "YABP", "RPG Prep", "Correspondance"), "Craft",
ifelse(d$`Assigned task` == "P.S Work High Value", "Work",
ifelse(d$`Assigned task` == "Wealth", "Wealth",
ifelse(d$`Assigned task` == "Study", "Study", "Other"))))
write_csv(d, "data_transformed/curated_BeFocused.csv")
# What is a normal day like?
daily_all <- d %>%
pad %>%
group_by(Date) %>%
summarise(hours_in_day = sum(hours, na.rm = T))
daily_all$avail_time <- 8
daily_all$focused_prop <- round((daily_all$hours_in_day / daily_all$avail_time), digits = 2)
daily <-d %>%
group_by(Date, category) %>%
summarise(hours_in_day = sum(hours, na.rm = T))
write_csv(daily_all, "data_transformed/daily_all.csv")
# What is weekly like?
library(lubridate)
weekly <- daily
# Assign week number
weekly <- weekly %>%
mutate(week = week(Date))
# Assign year as int
weekly$year <- ifelse(weekly$Date >= "2019-01-01", 2019, 2018)
# Collapse into weekly data
weekly <- weekly %>%
group_by(week, category, year) %>%
summarise(hours_in_week = sum(hours_in_day))
# Export
write_csv(weekly, "data_transformed/weekly.csv")
# Trend of time spent
trend_type <- d %>%
group_by(Date, category) %>%
summarise(time_spent = sum(hours, na.rm = T))
write_csv(trend_type, "data_transformed/trend_type.csv")
overall_deep_work_score <- daily_all %>%
summarise(total_avail = sum(avail_time, na.rm = T),
total_focus = sum(hours_in_day, na.rm = T),
focus_score = total_focus / total_avail)
write_csv(overall_deep_work_score, "data_transformed/deep_work_score.csv")
# Deep Work quantity by day
ggplot(data = trend_type %>%
select(Date, time_spent) %>%
group_by(Date) %>%
summarise(total_per_day = sum(time_spent)), aes(x = Date, y = total_per_day)) +
geom_point() +
geom_smooth()
# Density
ggplot(data = d, aes(x = hours, fill = category)) +
geom_density(alpha = 0.2)
ggplot(data = daily, aes(x = category, y = hours_in_day, col = category)) +
geom_boxplot(alpha = 0.5) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
coord_flip()
ggplot(data = daily_all, aes(x = hours_in_day)) +
geom_histogram() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
ggplot(data = daily_all, aes(x = hours_in_day)) +
geom_histogram() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
# Look at effective use of time
ggplot(data = daily_all, aes(x = focused_prop)) +
geom_histogram() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
# Trend of focus % over time - am I getting better or worse??
ggplot(data = daily_all, aes(x = Date, y = focused_prop)) +
geom_point() +
geom_smooth() +
theme_minimal()
ggplot(data = trend_type, aes(x = time_spent, fill = category)) +
geom_density(alpha = 0.5) +
theme_minimal()
ggplot(data = weekly, aes(x = hours_in_week, fill = category)) +
geom_density(alpha = 0.5) +
theme_minimal()
ggplot(data = trend_type, aes(x = time_spent, fill = category)) +
geom_density(alpha = 0.5) +
theme_minimal() +
facet_wrap(~ category, nrow = 3)
ggplot(data = daily, aes(x = Date, y = hours_in_day, col = category)) +
geom_line() +
theme_minimal()
View(daily_all)
View(daily)
View(daily_all)
write_csv(daily_all, "data_transformed/daily.csv")
library(shiny)
library(here)
library(tidyverse)
daily_all <- read_csv("daily_all.csv")
daily <- read_csv("daily.csv")
runApp('Deep_Work_Supervisor')
daily_all <- read_csv("daily_all.csv")
daily <- read_csv("daily.csv")
library(shiny)
library(here)
library(tidyverse)
daily_all <- read_csv("daily_all.csv")
daily <- read_csv("daily.csv")
runApp('Deep_Work_Supervisor')
runApp('Deep_Work_Supervisor')
runApp('Deep_Work_Supervisor')
runApp('Deep_Work_Supervisor')
runApp('Deep_Work_Supervisor')
packrat::init()
shiny::runApp('Deep_Work_Supervisor')
shiny::runApp('Deep_Work_Supervisor')
shiny::runApp('Deep_Work_Supervisor')
runApp('Deep_Work_Supervisor')
dates <- as.Date(c("2019-01-01", "2019-01-02", "2019-12-30", "2019-12-31"))
dates <- as.data.frame(dates)
dates  <- dates %>%
pad()
library(here)
install.packages("here", repos = "https:www.rstudio.com")
install.packages("here", repos = "https://www.rstudio.com")
library(here)
install.packages("here")
library(here)
library(tidyverse)
install.packages("here")
library(here)
install.packages("tidyverse")
library(tidyverse)
install.packages("padr")
library(padr)
dates <- as.Date(c("2019-01-01", "2019-01-02", "2019-12-30", "2019-12-31"))
dates <- as.data.frame(dates)
dates  <- dates %>%
pad()
# Identify the weekends
weekends <- dates$dates[weekdays(dates$dates) %in% c("Saturday", "Sunday")]
# Identify public holidays
public_holidays <- as.Date(c("2019-01-01", "2019-01-28", "2019-03-11", "2019-04-19",
"2019-04-20", "2019-04-22", "2019-04-25", "2019-06-10",
"2019-10-07", "2019-12-24", "2019-12-25", "2019-12-26", "2019-12-31"))
# Identify vacation days x 20
vacations <- as.Date(c("2019-03-04", "2019-03-05", "2019-03-06", "2019-03-07", "2019-03-08",
"2019-07-01", "2019-07-02", "2019-07-03", "2019-07-04", "2019-07-05",
"2019-09-16", "2019-09-17", "2019-09-18", "2019-09-19", "2019-09-20",
"2019-11-04", "2019-11-05", "2019-11-06", "2019-11-07", "2019-11-08"))
# Create tags
dates$day_type <- ifelse(dates$dates %in% vacations, "vacation",
ifelse(dates$dates %in% public_holidays, "public_holiday",
ifelse(dates$dates %in% weekends, "weekend", "work")))
summary(as.factor(dates$day_type))
# Study target
dates$study_target <- ifelse(dates$dates %in% vacations, 0,
ifelse(dates$dates %in% public_holidays, 0,
ifelse(dates$dates %in% weekends, 2, 4)))
study_total_sessions <- sum(dates$study_target)
study_total_minutes <- study_total_sessions * 30
study_total_hours <- round(study_total_minutes / 60)
# Wealth target
dates$wealth_target <- ifelse(dates$dates %in% vacations, 0,
ifelse(dates$dates %in% public_holidays, 0,
ifelse(dates$dates %in% weekends, 2, 2)))
wealth_total_sessions <- sum(dates$wealth_target)
wealth_total_minutes <- wealth_total_sessions * 30
wealth_total_hours <- round(wealth_total_minutes / 60)
# Craft target
dates$craft_target <- ifelse(dates$dates %in% vacations, 4,
ifelse(dates$dates %in% public_holidays, 0,
ifelse(dates$dates %in% weekends, 4, 2)))
craft_total_sessions <- sum(dates$craft_target)
craft_total_minutes <- craft_total_sessions * 30
craft_total_hours <- round(craft_total_minutes / 60)
# Work target
dates$work_target <- ifelse(dates$dates %in% vacations, 0,
ifelse(dates$dates %in% public_holidays, 0,
ifelse(dates$dates %in% weekends, 0, 12)))
work_total_sessions <- sum(dates$work_target)
work_total_minutes <- work_total_sessions * 30
work_total_hours <- work_total_minutes / 60
work_deepwork_efficiency <- round(work_total_hours / 2080, digits = 2)
names(dates)
dates_tidy <- dates %>%
select( dates, day_type, study_target, wealth_target, craft_target, work_target) %>%
gather(session_type, session_count, 3:6) %>%
mutate(session_hours = round((session_count * 30) / 60))
View(dates_tidy)
View(dates)
View(dates_tidy)
write_csv(dates_tidy, "targets.csv")
write_csv(dates_tidy, "data_transformed/targets.csv")
actual <- read_csv("Deep_Work_Supervisor/trend_type.csv")
View(actual)
View(dates)
View(dates_tidy)
View(actual)
View(actual)
actual <- actual %>%
filter(category != "Other")
View(dates_tidy)
dates_tidy$category <- ifelse(dates_tidy$session_type == "work_target", "Work",
ifelse(dates_tidy$session_type == "study_target", "Study",
ifelse(dates_tidy$session_type == "craft_target", "Craft",
ifelse(dates_tidy$session_type == wealth_target, "Wealth"))))
unique(dates_tidy$session_type)
dates_tidy$category <- ifelse(dates_tidy$session_type == "work_target", "Work",
ifelse(dates_tidy$session_type == "study_target", "Study",
ifelse(dates_tidy$session_type == "craft_target", "Craft",
ifelse(dates_tidy$session_type == wealth_target, "Wealth"))))
dates_tidy$category <- ifelse(dates_tidy$session_type == "work_target", "Work",
ifelse(dates_tidy$session_type == "study_target", "Study",
ifelse(dates_tidy$session_type == "craft_target", "Craft",
ifelse(dates_tidy$session_type == "wealth_target", "Wealth"))))
dates_tidy$category <- ifelse(dates_tidy$session_type == "work_target", "Work",
ifelse(dates_tidy$session_type == "study_target", "Study",
ifelse(dates_tidy$session_type == "craft_target", "Craft",
ifelse(dates_tidy$session_type == "wealth_target", "Wealth", "Other"))))
progress_so_far <- dates_tidy %>%
left_join(actual, by = c("Date", "category"))
# Rename dates
dates_tidy$Date <- dates_tidy$dates
progress_so_far <- dates_tidy %>%
left_join(actual, by = c("Date", "category"))
View(progress_so_far)
library(here)
library(tidyverse)
library(padr)
dates <- as.Date(c("2019-01-01", "2019-01-02", "2019-12-30", "2019-12-31"))
dates <- as.data.frame(dates)
dates  <- dates %>%
pad()
# Identify the weekends
weekends <- dates$dates[weekdays(dates$dates) %in% c("Saturday", "Sunday")]
# Identify public holidays
public_holidays <- as.Date(c("2019-01-01", "2019-01-28", "2019-03-11", "2019-04-19",
"2019-04-20", "2019-04-22", "2019-04-25", "2019-06-10",
"2019-10-07", "2019-12-24", "2019-12-25", "2019-12-26", "2019-12-31"))
# Identify vacation days x 20
vacations <- as.Date(c("2019-03-04", "2019-03-05", "2019-03-06", "2019-03-07", "2019-03-08",
"2019-07-01", "2019-07-02", "2019-07-03", "2019-07-04", "2019-07-05",
"2019-09-16", "2019-09-17", "2019-09-18", "2019-09-19", "2019-09-20",
"2019-11-04", "2019-11-05", "2019-11-06", "2019-11-07", "2019-11-08"))
# Create tags
dates$day_type <- ifelse(dates$dates %in% vacations, "vacation",
ifelse(dates$dates %in% public_holidays, "public_holiday",
ifelse(dates$dates %in% weekends, "weekend", "work")))
summary(as.factor(dates$day_type))
# Study target
dates$study_target <- ifelse(dates$dates %in% vacations, 0,
ifelse(dates$dates %in% public_holidays, 0,
ifelse(dates$dates %in% weekends, 2, 4)))
study_total_sessions <- sum(dates$study_target)
study_total_minutes <- study_total_sessions * 30
study_total_hours <- round(study_total_minutes / 60)
# Wealth target
dates$wealth_target <- ifelse(dates$dates %in% vacations, 0,
ifelse(dates$dates %in% public_holidays, 0,
ifelse(dates$dates %in% weekends, 2, 2)))
wealth_total_sessions <- sum(dates$wealth_target)
wealth_total_minutes <- wealth_total_sessions * 30
wealth_total_hours <- round(wealth_total_minutes / 60)
# Craft target
dates$craft_target <- ifelse(dates$dates %in% vacations, 4,
ifelse(dates$dates %in% public_holidays, 0,
ifelse(dates$dates %in% weekends, 4, 2)))
craft_total_sessions <- sum(dates$craft_target)
craft_total_minutes <- craft_total_sessions * 30
craft_total_hours <- round(craft_total_minutes / 60)
# Work target
dates$work_target <- ifelse(dates$dates %in% vacations, 0,
ifelse(dates$dates %in% public_holidays, 0,
ifelse(dates$dates %in% weekends, 0, 12)))
work_total_sessions <- sum(dates$work_target)
work_total_minutes <- work_total_sessions * 30
work_total_hours <- work_total_minutes / 60
work_deepwork_efficiency <- round(work_total_hours / 2080, digits = 2)
names(dates)
dates_tidy <- dates %>%
select( dates, day_type, study_target, wealth_target, craft_target, work_target) %>%
gather(session_type, session_count, 3:6) %>%
mutate(session_hours = round((session_count * 30) / 60))
write_csv(dates_tidy, "data_transformed/targets.csv")
actual <- read_csv("Deep_Work_Supervisor/trend_type.csv")
# Remove 'Other'
actual <- actual %>%
filter(category != "Other")
# Create 'category' for join
dates_tidy$category <- ifelse(dates_tidy$session_type == "work_target", "Work",
ifelse(dates_tidy$session_type == "study_target", "Study",
ifelse(dates_tidy$session_type == "craft_target", "Craft",
ifelse(dates_tidy$session_type == "wealth_target", "Wealth", "Other"))))
# Rename dates
dates_tidy$Date <- dates_tidy$dates
progress_so_far <- dates_tidy %>%
left_join(actual, by = c("Date", "category"))
View(progress_so_far)
progress_so_far$time_spent[which(is.na())] <- 0
progress_so_far$time_spent[which(is.na(progress_so_far$time_spent))] <- 0
progress_so_far$achievement <- progress_so_far$time_spent/progress_so_far$session_hours
ggplot(data = progress_so_far, aes(x = Date, y = achievement)) +
geom_line()
ggplot(data = progress_so_far, aes(x = Date, y = achievement)) +
geom_line() +
facet_wrap(~ category, nrow = 2)
ggplot(data = progress_so_far, aes(x = Date, y = achievement)) +
geom_point() +
facet_wrap(~ category, nrow = 2)
# Remove 'Other'
actual <- actual %>%
filter(category != "Other")
# Create 'category' for join
dates_tidy$category <- ifelse(dates_tidy$session_type == "work_target", "Work",
ifelse(dates_tidy$session_type == "study_target", "Study",
ifelse(dates_tidy$session_type == "craft_target", "Craft",
ifelse(dates_tidy$session_type == "wealth_target", "Wealth", "Other"))))
# Rename dates
dates_tidy$Date <- dates_tidy$dates
progress_so_far <- dates_tidy %>%
left_join(actual, by = c("Date", "category"))
progress_so_far$achievement <- progress_so_far$time_spent/progress_so_far$session_hours
ggplot(data = progress_so_far, aes(x = Date, y = achievement)) +
geom_point() +
facet_wrap(~ category, nrow = 2)
progress_so_far$achievement <- (progress_so_far$time_spent/progress_so_far$session_hours) - 1
ggplot(data = progress_so_far, aes(x = Date, y = achievement)) +
geom_point() +
facet_wrap(~ category, nrow = 2)
work_achieve_score <- progress_so_far %>%
filter(category == "Work") %>%
summarise(achieve_score = sum(achievement))
View(work_achieve_score)
work_achieve_score <- progress_so_far %>%
filter(category == "Work") %>%
summarise(achieve_score = sum(achievement, na.rm = TRUE))
craft_achieve_score <- progress_so_far %>%
filter(category == "Craft") %>%
summarise(achieve_score = sum(achievement, na.rm = TRUE))
View(craft_achieve_score)
progress_so_far$achievement <-   progress_so_far$session_hours - progress_so_far$time_spent
ggplot(data = progress_so_far, aes(x = Date, y = achievement)) +
geom_point() +
facet_wrap(~ category, nrow = 2)
work_achieve_score <- progress_so_far %>%
filter(category == "Work") %>%
summarise(achieve_score = sum(achievement, na.rm = TRUE))
craft_achieve_score <- progress_so_far %>%
filter(category == "Craft") %>%
summarise(achieve_score = sum(achievement, na.rm = TRUE))
progress_so_far$achievement <- progress_so_far$time_spent - progress_so_far$session_hours
ggplot(data = progress_so_far, aes(x = Date, y = achievement)) +
geom_point() +
facet_wrap(~ category, nrow = 2)
work_achieve_score <- progress_so_far %>%
filter(category == "Work") %>%
summarise(achieve_score = sum(achievement, na.rm = TRUE))
craft_achieve_score <- progress_so_far %>%
filter(category == "Craft") %>%
summarise(achieve_score = sum(achievement, na.rm = TRUE))
wealth_achieve_score <- progress_so_far %>%
filter(category == "Wealth") %>%
summarise(achieve_score = sum(achievement, na.rm = TRUE))
View(wealth_achieve_score)
study_achieve_score <- progress_so_far %>%
filter(category == "Study") %>%
summarise(achieve_score = sum(achievement, na.rm = TRUE))
View(study_achieve_score)
# TODO - create time of day variable
library(here)
library(tidyverse)
library(padr)
dates <- as.Date(c("2019-01-01", "2019-01-02", "2019-12-30", "2019-12-31"))
dates <- as.data.frame(dates)
dates  <- dates %>%
pad()
# Identify the weekends
weekends <- dates$dates[weekdays(dates$dates) %in% c("Saturday", "Sunday")]
# Identify public holidays
public_holidays <- as.Date(c("2019-01-01", "2019-01-28", "2019-03-11", "2019-04-19",
"2019-04-20", "2019-04-22", "2019-04-25", "2019-06-10",
"2019-10-07", "2019-12-24", "2019-12-25", "2019-12-26", "2019-12-31"))
# Identify vacation days x 20
vacations <- as.Date(c("2019-03-04", "2019-03-05", "2019-03-06", "2019-03-07", "2019-03-08",
"2019-07-01", "2019-07-02", "2019-07-03", "2019-07-04", "2019-07-05",
"2019-09-16", "2019-09-17", "2019-09-18", "2019-09-19", "2019-09-20",
"2019-11-04", "2019-11-05", "2019-11-06", "2019-11-07", "2019-11-08"))
# Create tags
dates$day_type <- ifelse(dates$dates %in% vacations, "vacation",
ifelse(dates$dates %in% public_holidays, "public_holiday",
ifelse(dates$dates %in% weekends, "weekend", "work")))
summary(as.factor(dates$day_type))
# Study
# Wealth
# Craft
# Work
# Study target
dates$study_target <- ifelse(dates$dates %in% vacations, 0,
ifelse(dates$dates %in% public_holidays, 0,
ifelse(dates$dates %in% weekends, 2, 4)))
study_total_sessions <- sum(dates$study_target)
study_total_minutes <- study_total_sessions * 30
study_total_hours <- round(study_total_minutes / 60)
# Wealth target
dates$wealth_target <- ifelse(dates$dates %in% vacations, 0,
ifelse(dates$dates %in% public_holidays, 0,
ifelse(dates$dates %in% weekends, 2, 2)))
wealth_total_sessions <- sum(dates$wealth_target)
wealth_total_minutes <- wealth_total_sessions * 30
wealth_total_hours <- round(wealth_total_minutes / 60)
# Craft target
dates$craft_target <- ifelse(dates$dates %in% vacations, 4,
ifelse(dates$dates %in% public_holidays, 0,
ifelse(dates$dates %in% weekends, 4, 2)))
craft_total_sessions <- sum(dates$craft_target)
craft_total_minutes <- craft_total_sessions * 30
craft_total_hours <- round(craft_total_minutes / 60)
# Work target
dates$work_target <- ifelse(dates$dates %in% vacations, 0,
ifelse(dates$dates %in% public_holidays, 0,
ifelse(dates$dates %in% weekends, 0, 8)))
work_total_sessions <- sum(dates$work_target)
work_total_minutes <- work_total_sessions * 30
work_total_hours <- work_total_minutes / 60
work_deepwork_efficiency <- round(work_total_hours / 2080, digits = 2)
# Total target
dates$total_target <- dates$study_target + dates$wealth_target + dates$craft_target + dates$work_target
total_deepwork_sessions <- sum(dates$total_target)
total_deepwork_minutes <- total_deepwork_sessions * 25
total_deepwork_hours <- total_deepwork_minutes / 60
total_deepwork_efficiency <- round(total_deepwork_hours / 2920, digits = 2)
names(dates)
dates_tidy <- dates %>%
select( dates, day_type, study_target, wealth_target, craft_target, work_target) %>%
gather(session_type, session_count, 3:6) %>%
mutate(session_hours = round((session_count * 30) / 60))
write_csv(dates_tidy, "data_transformed/targets.csv")
actual <- read_csv("Deep_Work_Supervisor/trend_type.csv")
# Remove 'Other'
actual <- actual %>%
filter(category != "Other")
# Create 'category' for join
dates_tidy$category <- ifelse(dates_tidy$session_type == "work_target", "Work",
ifelse(dates_tidy$session_type == "study_target", "Study",
ifelse(dates_tidy$session_type == "craft_target", "Craft",
ifelse(dates_tidy$session_type == "wealth_target", "Wealth", "Other"))))
# Rename dates
dates_tidy$Date <- dates_tidy$dates
progress_so_far <- dates_tidy %>%
left_join(actual, by = c("Date", "category"))
# Fix NA
progress_so_far$time_spent[which(is.na(progress_so_far$time_spent))] <- 0
progress_so_far$achievement <- progress_so_far$time_spent - progress_so_far$session_hours
ggplot(data = progress_so_far, aes(x = Date, y = achievement)) +
geom_point() +
facet_wrap(~ category, nrow = 2)
work_achieve_score <- progress_so_far %>%
filter(category == "Work") %>%
summarise(achieve_score = sum(achievement, na.rm = TRUE))
craft_achieve_score <- progress_so_far %>%
filter(category == "Craft") %>%
summarise(achieve_score = sum(achievement, na.rm = TRUE))
wealth_achieve_score <- progress_so_far %>%
filter(category == "Wealth") %>%
summarise(achieve_score = sum(achievement, na.rm = TRUE))
study_achieve_score <- progress_so_far %>%
filter(category == "Study") %>%
summarise(achieve_score = sum(achievement, na.rm = TRUE))
# Work target
dates$work_target <- ifelse(dates$dates %in% vacations, 0,
ifelse(dates$dates %in% public_holidays, 0,
ifelse(dates$dates %in% weekends, 0, 8)))
work_total_sessions <- sum(dates$work_target)
work_total_minutes <- work_total_sessions * 30
work_total_hours <- work_total_minutes / 60
work_deepwork_efficiency <- round(work_total_hours / 2080, digits = 2)
# Total target
dates$total_target <- dates$study_target + dates$wealth_target + dates$craft_target + dates$work_target
total_deepwork_sessions <- sum(dates$total_target)
total_deepwork_minutes <- total_deepwork_sessions * 25
total_deepwork_hours <- total_deepwork_minutes / 60
total_deepwork_efficiency <- round(total_deepwork_hours / 2920, digits = 2)
# Remove 'Other'
actual <- actual %>%
filter(category != "Other")
# Create 'category' for join
dates_tidy$category <- ifelse(dates_tidy$session_type == "work_target", "Work",
ifelse(dates_tidy$session_type == "study_target", "Study",
ifelse(dates_tidy$session_type == "craft_target", "Craft",
ifelse(dates_tidy$session_type == "wealth_target", "Wealth", "Other"))))
# Rename dates
dates_tidy$Date <- dates_tidy$dates
progress_so_far <- dates_tidy %>%
left_join(actual, by = c("Date", "category"))
# Fix NA
#progress_so_far$time_spent[which(is.na(progress_so_far$time_spent))] <- 0
progress_so_far$achievement <- progress_so_far$time_spent - progress_so_far$session_hours
ggplot(data = progress_so_far, aes(x = Date, y = achievement)) +
geom_point() +
facet_wrap(~ category, nrow = 2)
work_achieve_score <- progress_so_far %>%
filter(category == "Work") %>%
summarise(achieve_score = sum(achievement, na.rm = TRUE))
craft_achieve_score <- progress_so_far %>%
filter(category == "Craft") %>%
summarise(achieve_score = sum(achievement, na.rm = TRUE))
wealth_achieve_score <- progress_so_far %>%
filter(category == "Wealth") %>%
summarise(achieve_score = sum(achievement, na.rm = TRUE))
study_achieve_score <- progress_so_far %>%
filter(category == "Study") %>%
summarise(achieve_score = sum(achievement, na.rm = TRUE))
shiny::runApp('Deep_Work_Supervisor')
runApp('Deep_Work_Supervisor')
runApp('Deep_Work_Supervisor')
runApp('Deep_Work_Supervisor')
runApp('Deep_Work_Supervisor')
